import {
  FETCH_DISKS_START,
  FETCH_DISKS_SUCCESS,
  FETCH_DISKS_FAILURE,
  LOAD_MORE_DISKS_START,
  LOAD_MORE_DISKS_SUCCESS,
  LOAD_MORE_DISKS_FAILURE,
  FETCH_DISK_BY_ID_START,
  FETCH_DISK_BY_ID_SUCCESS,
  FETCH_DISK_BY_ID_FAILURE,
  ADD_DISK_TO_BASKET,
  SEARCH_DISK,
  FETCH_CATEGORIES_START,
  FETCH_CATEGORIES_SUCCESS,
  FETCH_CATEGORIES_FAILURE,
  REMOVE_DISK_FROM_BASKET,
  CLEAN_BASKET
} from 'actionTypes';

import {getRenderedDisksLength} from 'selectors';

import {
  fetchDisks as fetchDisksApi, 
  loadMoreDisks as LoadMoreDisksApi,
  fetchDiskById as fetchDiskByIdApi,
  fetchCategories as fetchCategoriesApi
} from 'api';


export const fetchDisks = () => async dispatch => {
  dispatch({type: FETCH_DISKS_START});

  try {
    const disks = await fetchDisksApi();
    dispatch({
      type: FETCH_DISKS_SUCCESS,
      payload: disks
    });
  } catch (error) {
    dispatch({
      type: FETCH_DISKS_FAILURE,
      payload: error,
      error: true
    })
  }
}

export const loadMoreDisks = () => async (dispatch, getState) => {
  const offset = getRenderedDisksLength(getState());
  dispatch({type: LOAD_MORE_DISKS_START});

  try {
    const disks = await LoadMoreDisksApi({offset});
    dispatch({
      type: LOAD_MORE_DISKS_SUCCESS,
      payload: disks
    });
  } catch (error) {
    dispatch({
      type: LOAD_MORE_DISKS_FAILURE,
      payload: error,
      error: true
    })
  }
}

export const fetchDiskById = id => async dispatch => {
  dispatch({type: FETCH_DISK_BY_ID_START})

  try {
    const disk = await fetchDiskByIdApi(id);
    dispatch({
      type: FETCH_DISK_BY_ID_SUCCESS,
      payload: disk
    })
  } catch (err) {
    dispatch({
      type: FETCH_DISK_BY_ID_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const addDiskToBasket = id => dispatch => {
  dispatch({
    type: ADD_DISK_TO_BASKET,
    payload: id
  })
}

export const searchDisk = text => dispatch => {
  dispatch({
    type: SEARCH_DISK,
    payload: text
  });
}

export const fetchCategories = () => async dispatch => {
  dispatch({type: FETCH_CATEGORIES_START});

  try {
    const categories = await fetchCategoriesApi();
    dispatch({
      type: FETCH_CATEGORIES_SUCCESS,
      payload: categories
    });
  } catch (error) {
    dispatch({
      type: FETCH_CATEGORIES_FAILURE,
      payload: error,
      error: true
    })
  }
}

export const removeDiskFromBasket = id => dispatch => {
  dispatch({
    type: REMOVE_DISK_FROM_BASKET,
    payload: id
  })
}

export const cleanBasket = () => dispatch => {
  dispatch({
    type: CLEAN_BASKET
  })
}

export const basketCheckout = disks => () => {
  alert(JSON.stringify(disks))
}